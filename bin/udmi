#!/bin/bash -e
set -o errexit -o nounset

app=/udmi
bin="$app"/bin
site="$app"/sites/"$UDMI_REGISTRY"
config="$site"/cloud_iot_config.json

if [ "$1" = "clone" ] || [ "$1" = "c" ]; then
  git clone "$UDMI_REPO" "$app" || true
  git -C "$app" remote add upstream https://github.com/faucetsdn/udmi.git || true
  git -C "$app" fetch upstream --tags --force
  #git -C "$app" push --tags
  git -C "$app" checkout --detach "$UDMI_VERSION"
  mkdir -p "$site"
  git clone "$UDMI_MODEL_REPO" "$site" || true
  git -C "$site" fetch
  git -C "$site" pull
elif [ "$1" = "registrar" ] || [ "$1" = "r" ]; then
  "$bin"/registrar "$config"
elif [ "$1" = "device" ] || [ "$1" = "d" ]; then
  if [ $# -ge 2 ]; then
    jq ".device_id = \"$2\"" "$config" | sponge "$config"
    cloud_region=$(jq -r '.cloud_region' "$config")
    registry_id=$(jq -r '.registry_id' "$config")
    project_id=$(jq -r '.project_id' "$config")
    client_id="projects/$project_id/locations/$cloud_region/registries/$registry_id/devices/$2"
    jq ".device_endpoint.client_id = \"$client_id\"" "$config" | sponge "$config"
  fi
  if [ $# -ge 3 ]; then
    jq ".serial_no = \"$3\"" "$config" | sponge "$config"
  fi
elif [ "$1" = "pubber" ] || [ "$1" = "p" ]; then
  if [ $# -ge 2 ]; then
    shift 1
    "$bin"/pubber "$config" "$@"
  else
    "$bin"/pubber "$config"
  fi
elif [ "$1" = "validator" ] || [ "$1" = "v" ]; then
  "$bin"/validator "$config"
elif [ "$1" = "sequencer" ] || [ "$1" = "s" ]; then
  ln -sf /venv "$app"/venv
  if [ $# -ge 2 ]; then
    if [ "$2" = "-a" ]; then
      "$bin"/sequencer -a -vv "$config"
    else
      shift 1
      "$bin"/sequencer -vv "$config" "$@"
    fi
  else
    "$bin"/sequencer -vv "$config"
  fi
elif [ "$1" = "--" ]; then
  udmi r
  for d in "$site"/devices/* ; do
    auth_type=$(jq -r '.cloud.auth_type' "$d/metadata.json")
    if [ "$auth_type" != null ]; then
      model=$(jq -r '.system.hardware.model' "$d/metadata.json")
      if [ $# -ge 2 ] && [ "$2" != "$model" ]; then
        continue
      fi
      udmi - $(basename "$d")
    fi
  done
elif [ "$1" = "-" ]; then
  if [ $# -ge 2 ]; then
    shift 1
    udmi d "$@"
    deviceId="$1"
  else
    deviceId=$(jq -r '.device_id' "$config")
  fi
  model=$(jq -r '.system.hardware.model' "$site/devices/$deviceId/metadata.json")
  if [ "$model" = "pubber" ]; then
    udmi p &> /dev/null &
    PUB_PID=$!
    trap "kill ${PUB_PID}" EXIT
  fi
  udmi s -a
  jq -r '.gateway.proxy_ids | .[]?' "$site/devices/$deviceId/metadata.json" |
  while read proxy; do
    udmi d "$proxy"
    udmi s -a
  done
fi
