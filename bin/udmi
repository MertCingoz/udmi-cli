#!/bin/bash -e
set -o errexit -o nounset

app=/udmi
bin="$app"/bin
site="$app"/sites/"$UDMI_REGISTRY"
config="$site"/udmi/cloud_iot_config.json

if [ "$1" = "clone" ]; then
  git clone "$UDMI_REPO" "$app" || true
  git -C "$app" remote add upstream https://github.com/faucetsdn/udmi.git || true
  git -C "$app" fetch upstream
  git -C "$app" checkout --detach "$UDMI_VERSION"
  mkdir -p "$site"
  git clone "$UDMI_MODEL_REPO" "$site" || true
  git -C "$site" fetch
  git -C "$site" pull
elif [ "$1" = "registrar" ]; then
  "$bin"/registrar "$config"
elif [ "$1" = "device" ]; then
  if [ $# -ge 2 ]; then
    jq ".device_id = \"$2\"" "$config" | sponge "$config"
    cloud_region=$(jq -r '.cloud_region' "$config")
    registry_id=$(jq -r '.registry_id' "$config")
    project_id=$(jq -r '.project_id' "$config")
    client_id="projects/$project_id/locations/$cloud_region/registries/$registry_id/devices/$2"
    jq ".device_endpoint.client_id = \"$client_id\"" "$config" | sponge "$config"
  fi
  if [ $# -ge 3 ]; then
    jq ".serial_no = \"$3\"" "$config" | sponge "$config"
  fi
elif [ "$1" = "pubber" ]; then
  if [ $# -ge 2 ]; then
    shift 1
    "$bin"/pubber "$config" "$@"
  else
    "$bin"/pubber "$config"
  fi
elif [ "$1" = "validator" ]; then
  "$bin"/validator "$config"
elif [ "$1" = "sequencer" ]; then
  ln -sf /venv "$app"/venv
  if [ $# -ge 2 ]; then
    if [ "$2" = "-a" ]; then
      "$bin"/sequencer -a -vv "$config"
    else
      "$bin"/sequencer -vv "$config" "$2"
    fi
  else
    "$bin"/sequencer -vv "$config"
  fi
fi
